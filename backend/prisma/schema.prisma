generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  firstname  String
  lastname   String
  promotion  String
  isActive   Boolean     @default(true)
  createdAt  DateTime    @default(now())
  lastLogin  DateTime?
  votes      Vote[]
  tracks     Track[]     @relation("UserTracks")
  authTokens AuthToken[] // ðŸ‘ˆ Ajout de lâ€™autre cÃ´tÃ© de la relation avec AuthToken
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model PreRegisteredUser {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  firstname String
  lastname  String
  promotion String
  isUsed    Boolean @default(false)
}

model Session {
  id        Int      @id @default(autoincrement())
  subject   String
  teacher   String?
  audience  String?
  room      String?
  date      DateTime
  start     DateTime
  end       DateTime
  tracks    Track[]
  votes     Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([subject, start, room])
}

model Track {
  id        Int      @id @default(autoincrement())
  title     String
  artist    String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  user      User     @relation("UserTracks", fields: [userId], references: [id]) // ðŸ‘ˆ Ajout relation avec User
  userId    Int
  votes     Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  track     Track?   @relation(fields: [trackId], references: [id])
  trackId   Int?
  createdAt DateTime @default(now())

  @@unique([userId, sessionId])
}
